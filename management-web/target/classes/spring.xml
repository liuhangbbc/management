<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!--引入配置属性文件 -->
	<context:property-placeholder location="classpath*:/*.properties" />

	<!-- <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"> 
		<property name="locations"> <list> <value>classpath*:/mysql.properties</value> 
		<value>classpath*:/config.properties</value> <value>classpath*:/redis.properties</value> 
		</list> </property> </bean> -->

	<!--自动扫描含有@Service将其注入为bean -->
	<context:component-scan base-package="nr.nightread.service" />

	<!-- 配置静态文件不被拦截 -->
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/common/**" location="/common/" />

	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/" />
			<mvc:mapping path="/user/**" />
			<bean class="com.rd.management.core.interceptor.CommonInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
	
	<bean id="propertiesReader"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
</beans>